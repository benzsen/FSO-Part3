{"version":3,"sources":["services/contacts.js","App.js","reportWebVitals.js","index.js"],"names":["personsURL","name","number","axios","post","get","id","delete","updatedContact","put","FilterInput","props","onChange","handleFilterChange","PersonForm","addName","newName","newNumber","handleNameChange","handleNumberChange","onSubmit","value","type","DisplayName","persons","newFilter","toLowerCase","triggerUpdateList","setNotifClass","setNotifMessage","filteredData","filter","person","substring","length","data","map","onClick","window","confirm","contacts","then","res","setTimeout","deleteFunc","App","useState","setPersons","setNewName","setNewNumber","setNewFilter","updateList","notifMessage","notifClass","Notification","message","className","useEffect","response","event","target","preventDefault","duplicateCheck","find","undefined","contact","n","_id","console","log","catch","error","updateContactNum","alert","concat","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1beda362.chunk.js","sourcesContent":["import axios from \"axios\"\r\n\r\n//For producition build\r\n//const personsURL = \"http://localhost:3001/api/persons/\";\r\nconst personsURL = \"/api/persons/\";\r\n\r\nconst create = ({name,number})=> axios.post(personsURL, {name,number})\r\n\r\nconst getAll = () => axios.get(personsURL);\r\n\r\nconst remove = (id) => axios.delete(personsURL+id);\r\n\r\nconst put = (id,updatedContact) => axios.put(personsURL+id, updatedContact);\r\n\r\nexport default {create, getAll, remove, put}\r\n","//Completed 2-19 to 2-20\n\nimport React, { useState, useEffect} from 'react'\nimport contacts from \"./services/contacts\"\n\nconst FilterInput = (props) => <div> Filter: <input onChange={props.handleFilterChange}/></div>\n\nconst PersonForm = (props) => {\n  const addName = props.addName;\n  const newName = props.newName;\n  const newNumber = props.newNumber;\n  const handleNameChange = props.handleNameChange;\n  const handleNumberChange = props.handleNumberChange;\n\n  return(\n  <form onSubmit={addName}>\n    <div>\n      name: <input value={newName} onChange={handleNameChange}/>\n    </div>\n    <div>\n      number: <input value={newNumber} onChange={handleNumberChange}/>\n    </div>\n    <div>\n      <button type=\"submit\">add</button>\n    </div>\n  </form>\n  )\n}\n\nconst DisplayName = (props) => {\n    const persons=props.persons;\n    const newFilter=props.newFilter.toLowerCase();\n    const triggerUpdateList=props.triggerUpdateList;\n    const setNotifClass = props.setNotifClass;\n    const setNotifMessage = props.setNotifMessage;\n\n    const filteredData = persons.filter(person => person.name.toLowerCase().substring(0,newFilter.length)===newFilter);\n\n//Called server in external file (contacts) and used .then here to update state and trigger useEffect (Same for delete and put)\n    const deleteFunc = (person) =>{\n        if(window.confirm(\"Are you sure you want to delete?\")){\n        return(\n          contacts.remove(person.id)\n          .then(res=>{\n            triggerUpdateList(res)\n            setNotifClass(\"greenNotif\")\n            setNotifMessage(person.name + \" removed\")\n          })\n          .then(setTimeout(() => {\n            setNotifMessage(null)\n          }, 5000))\n      )}}\n\n    const data = filteredData.map(person =>{\n      return(\n        <p key={person.name}>\n          {person.name} {person.number+\" \"}\n          <button onClick={()=>{deleteFunc(person)}}>delete</button>\n        </p>\n      )})\n    return <div>{data}</div>\n}\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber] = useState('')\n  const [ newFilter, setNewFilter] = useState(\"\")\n  const [ updateList, triggerUpdateList] = useState(\"\") //Used to update when adding/deleting\n  const [ notifMessage, setNotifMessage] = useState(null)\n  const [ notifClass, setNotifClass] = useState(\"\")\n\n  const handleNameChange = (event) => setNewName(event.target.value);\n  const handleNumberChange = (event) => setNewNumber(event.target.value);\n  const handleFilterChange = (event) => setNewFilter(event.target.value);\n\n  const addName = (event) => {\n    event.preventDefault();\n    let name=newName;\n    let number=newNumber;\n\n    let duplicateCheck = persons.find(person => person[\"name\"].toLowerCase() === name.toLowerCase());\n\n    const updateContactNum = (id) => {\n      //\"_id\" from mongoDB\n      const contact = persons.find(n => n._id === id)\n      console.log(contact);\n      //Copies properties of specific contact, then updates the number property\n      //This \"Shallow Copy\" method is recommended (Instead of changing the number directly)\n      const updatedContact = {...contact, number: newNumber}\n      //Part3.17 \"...contact\" cause name to be null after update\n      //const updatedContact = {name:newName, number: newNumber}\n\n      contacts.put(id, updatedContact)\n      .then(res=>triggerUpdateList(res))\n      .then(()=>{\n          setNotifClass(\"greenNotif\")\n          setNotifMessage(contact.name + \"'s number has been updated!\")\n        })\n      .then(setTimeout(() => {\n        setNotifMessage(null)\n      }, 5000))\n      .catch(error=>{\n        console.log(error);\n        setNotifClass(\"redNotif\")\n        setNotifMessage(\"Information for \" + updatedContact.name + \" not found\")\n      })\n    }\n\n    if(duplicateCheck!==undefined){\n      if(window.confirm(newName + \" is already taken. Would you like to update this contact?\")){\n        updateContactNum(duplicateCheck._id);\n      }\n      else alert(\"Contact Not Modified\");\n    }\n\n    else {\n      setPersons(persons.concat({name,number}));\n      contacts.create({name,number})\n        .then(res => triggerUpdateList(res))\n        .then(()=>{\n          setNotifClass(\"greenNotif\")\n          setNotifMessage(\"Added \" + name + \"!\")\n          console.log(\"greenNotif\");\n        })\n        .then(setTimeout(() => {\n          setNotifMessage(null)\n        }, 5000))\n    }\n  }\n\n  const Notification = (props) => {\n    if (props.message === null){\n      return null;\n    }\n    return (\n      <div className={props.notifClass}>\n        {props.message}\n      </div>\n    )\n  }\n\n  useEffect(()=>{\n    contacts.getAll()\n    .then(response => {\n      setPersons(response.data);\n    })\n  },[updateList])\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification\n      message={notifMessage}\n      notifClass={notifClass}\n      />\n      <FilterInput handleFilterChange={handleFilterChange}/>\n      <h3>Add a new</h3>\n      <PersonForm\n        addName={addName}\n        newName={newName}\n        newNumber={newNumber}\n        handleNameChange={handleNameChange}\n        handleNumberChange={handleNumberChange}/>\n      <h3>Numbers</h3>\n      <DisplayName\n        persons={persons}\n        newFilter={newFilter}\n        triggerUpdateList={triggerUpdateList}\n        setNotifClass={setNotifClass}\n        setNotifMessage={setNotifMessage}\n        />\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}